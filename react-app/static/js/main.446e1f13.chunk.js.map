{"version":3,"sources":["logo.svg","components/Task.js","components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["Task","props","deleteTask","taskId","axios","delete","then","resp","console","log","get","response","setTasks","data","alltasks","catch","err","_id","title","className","onClick","TaskList","tasks","map","index","App","useState","setTitle","getAllTasks","useEffect","value","type","onChange","e","target","post","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,I,4BCgCAA,MA7Bf,SAAcC,GACV,IAUMC,EAAa,SAAUC,GACzBC,IAAMC,OAAN,sCAA4CF,IACvCG,MAAK,SAAUC,GACZC,QAAQC,IAAIF,GAZpBH,IAAMM,IAAI,+BACLJ,MAAK,SAAUK,GACZH,QAAQC,IAAIE,GACZV,EAAMW,SAASD,EAASE,KAAKC,aAEhCC,OAAM,SAAUC,GACbR,QAAQC,IAAIO,SASfD,OAAM,SAAUC,GACbR,QAAQC,IAAIO,OAGxB,OACI,0CACcf,EAAMY,KAAKI,IADzB,iBAC4ChB,EAAMY,KAAKK,MACnD,wBAAQC,UAAU,sBAAsBC,QAAS,kBAAMlB,EAAWD,EAAMY,KAAKI,MAA7E,mBCZGI,MAZf,SAAkBpB,GACd,OACI,8BAEQA,EAAMqB,MAAMC,KAAI,SAAUV,EAAMW,GAC5B,OAAQ,cAAC,EAAD,CAAMX,KAAMA,EAAkBD,SAAUX,EAAMW,UAAvBY,SC2CpCC,MA7Cf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcV,EAAd,KACA,EAA0Bc,mBAAS,IAAnC,mBAAOR,EAAP,KAAcS,EAAd,KAeMC,EAAc,WAClBxB,IAAMM,IAAI,+BACPJ,MAAK,SAAUK,GACdH,QAAQC,IAAIE,GACZC,EAASD,EAASE,KAAKC,aAExBC,OAAM,SAAUC,GACfR,QAAQC,IAAIO,OAQlB,OAJAa,qBAAU,WACRD,MACC,IAGD,sBAAKT,UAAU,qBAAf,UACE,oBAAIA,UAAU,OAAd,sCACA,gCACE,uBAAOA,UAAU,eAAeW,MAAOZ,EAAOa,KAAK,OAAOC,SAAU,SAAAC,GAAC,OAAIN,EAASM,EAAEC,OAAOJ,UAC3F,wBAAQX,UAAU,8BAA8BC,QAjCnC,WACjB,IAAMP,EAAO,CAAEK,MAAOA,GACtBd,IAAM+B,KAAK,8BAA+BtB,GACvCP,MAAK,SAAUC,GACdC,QAAQC,IAAIF,GACZoB,EAAS,IACTC,OAEDb,OAAM,SAAUC,GACfR,QAAQC,IAAIO,OAwBZ,uBAEF,cAAC,EAAD,CAAUM,MAAOA,EAAOV,SAAUA,QClCzBwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.446e1f13.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Task(props) {\r\n    const getAllTasks = function () {\r\n        axios.get('http://localhost:4000/tasks')\r\n            .then(function (response) {\r\n                console.log(response)\r\n                props.setTasks(response.data.alltasks)\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const deleteTask = function (taskId) {\r\n        axios.delete(`http://localhost:4000/tasks/${taskId}`)\r\n            .then(function (resp) {\r\n                console.log(resp)\r\n                getAllTasks()\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <p>\r\n            Task Id: {props.data._id}, Task Name:  {props.data.title}\r\n            <button className=\"mx-3 btn btn-danger\" onClick={() => deleteTask(props.data._id)}>X</button>\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from './Task'\r\n\r\nfunction TaskList(props) {\r\n    return (\r\n        <div>\r\n            {\r\n                props.tasks.map(function (data, index) {\r\n                    return (<Task data={data} key={index} setTasks={props.setTasks} />)\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport TaskList from './components/TaskList';\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction App() {\r\n\r\n  const [tasks, setTasks] = useState([])\r\n  const [title, setTitle] = useState(\"\")\r\n\r\n  const createTask = function () {\r\n    const data = { title: title }\r\n    axios.post('http://localhost:4000/tasks', data)\r\n      .then(function (resp) {\r\n        console.log(resp)\r\n        setTitle(\"\")\r\n        getAllTasks()\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const getAllTasks = function () {\r\n    axios.get('http://localhost:4000/tasks')\r\n      .then(function (response) {\r\n        console.log(response)\r\n        setTasks(response.data.alltasks)\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  useEffect(function () {\r\n    getAllTasks()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App container mt-4\">\r\n      <h2 className=\"mb-3\">Task Manager Application</h2>\r\n      <div>\r\n        <input className=\"form-control\" value={title} type=\"text\" onChange={e => setTitle(e.target.value)} />\r\n        <button className=\"btn btn-primary col-12 my-3\" onClick={createTask}>Submit</button>\r\n      </div>\r\n      <TaskList tasks={tasks} setTasks={setTasks} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}